# meson.build for building on Linux (probably works on Mac as well, untested)

# Sources are autogenerated from the vcxproj file with vcxproj_to_meson.py
# (That tool used to automatically write the sources to the meson.build file
# which was less opaque but clunky and required the devs to re-run it every
# time a file was added; it has since been modified to only print the source
# filenames.)

c = run_command('python3', 'vcxproj_to_meson.py', check: true)
voidsprite_sources = c.stdout().strip().split('\n')

# Dependencies

thread_dep = dependency('threads')

# We use WrapDB wraps for these dependencies (see subprojects/*.wrap in root):
libpng_dep = dependency('libpng', fallback: ['libpng', 'libpng_dep'], static: get_option('portable'))
pugixml_dep = dependency('pugixml', fallback: ['pugixml', 'pugixml_dep'], static: get_option('portable'))
zlib_dep = dependency('zlib', fallback: ['zlib', 'zlib_dep'], static: get_option('portable'))

# These deps are vendored in our source code; we manually add meson.build files
# to build them as static libraries, see the subfolders for these libraries
# under the source folder.
liblcf_dep = dependency('liblcf', fallback: ['liblcf', 'liblcf_dep'], static: get_option('portable'))
libtga_dep = dependency('libtga', fallback: ['libtga', 'libtga_dep'], static: get_option('portable'))

sdl2_dep = dependency('sdl2', version: '>=2.0.22', fallback: ['sdl2', 'sdl2_dep'], static: get_option('portable'))
sdl2_ttf_dep = dependency('SDL2_ttf', version: '>=2.0.18', fallback: ['sdl2_ttf', 'sdl2_ttf_dep'], static: get_option('portable'))
sdl2_image_dep = dependency('SDL2_image', version: '>=2.6.0', fallback: ['sdl2_image', 'sdl2_image_dep'], static: get_option('portable'))

libjxl_dep = dependency('libjxl')

dependencies = [
  thread_dep,
  zlib_dep,
  libpng_dep,
  libjxl_dep,
  liblcf_dep,
  pugixml_dep,
  libtga_dep,
  sdl2_dep,
  sdl2_ttf_dep,
  sdl2_image_dep
]

# Windows requires sdl2main dependency
if host_machine.system() == 'windows'
  sdl2main_dep = dependency('sdl2main', version: '>=2.0.22', fallback: ['sdl2main', 'sdl2main_dep'], static: get_option('portable'))
  dependencies += sdl2main_dep
endif

# Install assets
if get_option('portable') 
  assets_dir = join_paths(get_option('prefix'), 'bin')
  cpp_args = '-DVOIDSPRITE_ASSETS_PATH='
else
  assets_dir = join_paths(get_option('prefix'), get_option('datadir'), 'voidsprite')
  cpp_args = '-DVOIDSPRITE_ASSETS_PATH="' + assets_dir + '/"'
endif

install_subdir('assets', install_dir: assets_dir)
install_data('appfont-MPLUSRounded1c-Medium.ttf', 'appfontjp-NotoSansJP-VariableFont_wght.ttf', install_dir: assets_dir)
if host_machine.system() == 'linux'
  subdir('linux')
endif

executable('voidsprite', voidsprite_sources,
  install: true,
  dependencies: dependencies,
  cpp_args: cpp_args)
