project('liblcf', 'cpp',
  default_options: ['warning_level=0', 'cpp_std=c++20']
)

liblcf_sources = files(
  'dbarray.cpp',
  'dbstring_struct.cpp',
  'encoder.cpp',
  join_paths('generated', 'ldb_actor.cpp'),
  join_paths('generated', 'ldb_animation.cpp'),
  join_paths('generated', 'ldb_animationcelldata.cpp'),
  join_paths('generated', 'ldb_animationframe.cpp'),
  join_paths('generated', 'ldb_animationtiming.cpp'),
  join_paths('generated', 'ldb_attribute.cpp'),
  join_paths('generated', 'ldb_battlecommand.cpp'),
  join_paths('generated', 'ldb_battlecommands.cpp'),
  join_paths('generated', 'ldb_battleranimation.cpp'),
  join_paths('generated', 'ldb_battleranimationitemskill.cpp'),
  join_paths('generated', 'ldb_battleranimationpose.cpp'),
  join_paths('generated', 'ldb_battleranimationweapon.cpp'),
  join_paths('generated', 'ldb_chipset.cpp'),
  join_paths('generated', 'ldb_class.cpp'),
  join_paths('generated', 'ldb_commonevent.cpp'),
  join_paths('generated', 'ldb_database.cpp'),
  join_paths('generated', 'ldb_enemy.cpp'),
  join_paths('generated', 'ldb_enemyaction.cpp'),
  join_paths('generated', 'ldb_item.cpp'),
  join_paths('generated', 'ldb_learning.cpp'),
  join_paths('generated', 'ldb_music.cpp'),
  join_paths('generated', 'ldb_skill.cpp'),
  join_paths('generated', 'ldb_sound.cpp'),
  join_paths('generated', 'ldb_state.cpp'),
  join_paths('generated', 'ldb_switch.cpp'),
  join_paths('generated', 'ldb_system.cpp'),
  join_paths('generated', 'ldb_terms.cpp'),
  join_paths('generated', 'ldb_terrain.cpp'),
  join_paths('generated', 'ldb_testbattler.cpp'),
  join_paths('generated', 'ldb_troop.cpp'),
  join_paths('generated', 'ldb_troopmember.cpp'),
  join_paths('generated', 'ldb_trooppage.cpp'),
  join_paths('generated', 'ldb_trooppagecondition.cpp'),
  join_paths('generated', 'ldb_variable.cpp'),
  join_paths('generated', 'lmt_encounter.cpp'),
  join_paths('generated', 'lmt_mapinfo.cpp'),
  join_paths('generated', 'lmt_start.cpp'),
  join_paths('generated', 'lmu_event.cpp'),
  join_paths('generated', 'lmu_eventpage.cpp'),
  join_paths('generated', 'lmu_eventpagecondition.cpp'),
  join_paths('generated', 'lmu_map.cpp'),
  join_paths('generated', 'lmu_moveroute.cpp'),
  join_paths('generated', 'lsd_save.cpp'),
  join_paths('generated', 'lsd_saveactor.cpp'),
  join_paths('generated', 'lsd_savecommonevent.cpp'),
  join_paths('generated', 'lsd_saveeasyrpgdata.cpp'),
  join_paths('generated', 'lsd_saveeasyrpgtext.cpp'),
  join_paths('generated', 'lsd_saveeasyrpgwindow.cpp'),
  join_paths('generated', 'lsd_saveeventexecframe.cpp'),
  join_paths('generated', 'lsd_saveeventexecstate.cpp'),
  join_paths('generated', 'lsd_saveinventory.cpp'),
  join_paths('generated', 'lsd_savemapevent.cpp'),
  join_paths('generated', 'lsd_savemapeventbase.cpp'),
  join_paths('generated', 'lsd_savemapinfo.cpp'),
  join_paths('generated', 'lsd_savepanorama.cpp'),
  join_paths('generated', 'lsd_savepartylocation.cpp'),
  join_paths('generated', 'lsd_savepicture.cpp'),
  join_paths('generated', 'lsd_savescreen.cpp'),
  join_paths('generated', 'lsd_savesystem.cpp'),
  join_paths('generated', 'lsd_savetarget.cpp'),
  join_paths('generated', 'lsd_savetitle.cpp'),
  join_paths('generated', 'lsd_savevehiclelocation.cpp'),
  join_paths('generated', 'rpg_actor.cpp'),
  join_paths('generated', 'rpg_animation.cpp'),
  join_paths('generated', 'rpg_animationcelldata.cpp'),
  join_paths('generated', 'rpg_animationframe.cpp'),
  join_paths('generated', 'rpg_animationtiming.cpp'),
  join_paths('generated', 'rpg_attribute.cpp'),
  join_paths('generated', 'rpg_battlecommand.cpp'),
  join_paths('generated', 'rpg_battlecommands.cpp'),
  join_paths('generated', 'rpg_battleranimation.cpp'),
  join_paths('generated', 'rpg_battleranimationitemskill.cpp'),
  join_paths('generated', 'rpg_battleranimationpose.cpp'),
  join_paths('generated', 'rpg_battleranimationweapon.cpp'),
  join_paths('generated', 'rpg_chipset.cpp'),
  join_paths('generated', 'rpg_class.cpp'),
  join_paths('generated', 'rpg_commonevent.cpp'),
  join_paths('generated', 'rpg_database.cpp'),
  join_paths('generated', 'rpg_encounter.cpp'),
  join_paths('generated', 'rpg_enemy.cpp'),
  join_paths('generated', 'rpg_enemyaction.cpp'),
  join_paths('generated', 'rpg_enums.cpp'),
  join_paths('generated', 'rpg_equipment.cpp'),
  join_paths('generated', 'rpg_event.cpp'),
  join_paths('generated', 'rpg_eventcommand.cpp'),
  join_paths('generated', 'rpg_eventpage.cpp'),
  join_paths('generated', 'rpg_eventpagecondition.cpp'),
  join_paths('generated', 'rpg_item.cpp'),
  join_paths('generated', 'rpg_learning.cpp'),
  join_paths('generated', 'rpg_map.cpp'),
  join_paths('generated', 'rpg_mapinfo.cpp'),
  join_paths('generated', 'rpg_movecommand.cpp'),
  join_paths('generated', 'rpg_moveroute.cpp'),
  join_paths('generated', 'rpg_music.cpp'),
  join_paths('generated', 'rpg_parameters.cpp'),
  join_paths('generated', 'rpg_rect.cpp'),
  join_paths('generated', 'rpg_save.cpp'),
  join_paths('generated', 'rpg_saveactor.cpp'),
  join_paths('generated', 'rpg_savecommonevent.cpp'),
  join_paths('generated', 'rpg_saveeasyrpgdata.cpp'),
  join_paths('generated', 'rpg_saveeasyrpgtext.cpp'),
  join_paths('generated', 'rpg_saveeasyrpgwindow.cpp'),
  join_paths('generated', 'rpg_saveeventexecframe.cpp'),
  join_paths('generated', 'rpg_saveeventexecstate.cpp'),
  join_paths('generated', 'rpg_saveinventory.cpp'),
  join_paths('generated', 'rpg_savemapevent.cpp'),
  join_paths('generated', 'rpg_savemapeventbase.cpp'),
  join_paths('generated', 'rpg_savemapinfo.cpp'),
  join_paths('generated', 'rpg_savepanorama.cpp'),
  join_paths('generated', 'rpg_savepartylocation.cpp'),
  join_paths('generated', 'rpg_savepicture.cpp'),
  join_paths('generated', 'rpg_savescreen.cpp'),
  join_paths('generated', 'rpg_savesystem.cpp'),
  join_paths('generated', 'rpg_savetarget.cpp'),
  join_paths('generated', 'rpg_savetitle.cpp'),
  join_paths('generated', 'rpg_savevehiclelocation.cpp'),
  join_paths('generated', 'rpg_skill.cpp'),
  join_paths('generated', 'rpg_sound.cpp'),
  join_paths('generated', 'rpg_start.cpp'),
  join_paths('generated', 'rpg_state.cpp'),
  join_paths('generated', 'rpg_switch.cpp'),
  join_paths('generated', 'rpg_system.cpp'),
  join_paths('generated', 'rpg_terms.cpp'),
  join_paths('generated', 'rpg_terrain.cpp'),
  join_paths('generated', 'rpg_testbattler.cpp'),
  join_paths('generated', 'rpg_treemap.cpp'),
  join_paths('generated', 'rpg_troop.cpp'),
  join_paths('generated', 'rpg_troopmember.cpp'),
  join_paths('generated', 'rpg_trooppage.cpp'),
  join_paths('generated', 'rpg_trooppagecondition.cpp'),
  join_paths('generated', 'rpg_variable.cpp'),
  'ldb_equipment.cpp',
  'ldb_eventcommand.cpp',
  'ldb_parameters.cpp',
  'ldb_reader.cpp',
  'lmt_reader.cpp',
  'lmt_rect.cpp',
  'lmt_treemap.cpp',
  'lmu_movecommand.cpp',
  'lmu_reader.cpp',
  'log_handler.cpp',
  'lsd_reader.cpp',
  'reader_flags.cpp',
  'reader_lcf.cpp',
  'reader_util.cpp',
  'reader_xml.cpp',
  'rpg_setup.cpp',
  'rpg_terms_generated.cpp',
  'saveopt.cpp',
  'writer_lcf.cpp',
  'writer_xml.cpp',
)

inc = include_directories('.', 'generated')
lib = static_library('lcf', liblcf_sources, include_directories: inc)
liblcf_dep = declare_dependency(link_with: lib, include_directories: inc)
